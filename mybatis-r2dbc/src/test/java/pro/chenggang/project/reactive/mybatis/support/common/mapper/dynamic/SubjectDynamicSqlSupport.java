/*
 *    Copyright 2009-2023 the original author or authors.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *       https://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
package pro.chenggang.project.reactive.mybatis.support.common.mapper.dynamic;

import org.mybatis.dynamic.sql.AliasableSqlTable;
import org.mybatis.dynamic.sql.SqlColumn;

import java.sql.JDBCType;
import java.time.LocalDateTime;

/**
 * auto generated dynamic mapper
 * 
 * @author autoGenerated
 */
public final class SubjectDynamicSqlSupport {
    public static final Subject subject = new Subject();

    public static final SqlColumn<Integer> id = subject.id;

    public static final SqlColumn<String> name = subject.name;

    public static final SqlColumn<Integer> age = subject.age;

    public static final SqlColumn<Integer> height = subject.height;

    public static final SqlColumn<Integer> weight = subject.weight;

    public static final SqlColumn<Boolean> active = subject.active;

    public static final SqlColumn<LocalDateTime> dt = subject.dt;

    public static final SqlColumn<Long> length = subject.length;

    public static final class Subject extends AliasableSqlTable<Subject> {
        public final SqlColumn<Integer> id = column("id", JDBCType.INTEGER);

        public final SqlColumn<String> name = column("name", JDBCType.VARCHAR);

        public final SqlColumn<Integer> age = column("age", JDBCType.INTEGER);

        public final SqlColumn<Integer> height = column("height", JDBCType.INTEGER);

        public final SqlColumn<Integer> weight = column("weight", JDBCType.INTEGER);

        public final SqlColumn<Boolean> active = column("active", JDBCType.BIT);

        public final SqlColumn<LocalDateTime> dt = column("dt", JDBCType.TIMESTAMP);

        public final SqlColumn<Long> length = column("length", JDBCType.BIGINT);

        public Subject() {
            super("subject", Subject::new);
        }
    }
}