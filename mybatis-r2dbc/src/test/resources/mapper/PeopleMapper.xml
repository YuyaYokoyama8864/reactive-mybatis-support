<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pro.chenggang.project.reactive.mybatis.support.r2dbc.application.mapper.PeopleMapper">
  <resultMap id="BaseResultMap" type="pro.chenggang.project.reactive.mybatis.support.r2dbc.application.model.People">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nick" jdbcType="VARCHAR" property="nick" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <resultMap id="TableResultMap" type="pro.chenggang.project.reactive.mybatis.support.r2dbc.application.model.People">
    <id column="people_id" jdbcType="INTEGER" property="id" />
    <result column="people_nick" jdbcType="VARCHAR" property="nick" />
    <result column="people_created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>

  <resultMap id="PeopleResultMap" type="People">
    <id column="id" property="id"/>
    <result column="nick" property="nick"/>
    <result column="created_at" property="createdAt"/>
  </resultMap>

  <select id="findAll" resultMap="PeopleResultMap">
    select id, nick, created_at
    from people
  </select>

  <select id="getAllCount" resultType="long">
    select count(*)
    from people
  </select>

  <insert id="insert" parameterType="People" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into people(nick, created_at) value (#{nick}, now())
  </insert>

  <insert id="batchInsert">
    insert into people (nick,created_at)
    values
    <foreach collection="peopleList" item="item" separator=",">
      (#{item.nick},#{item.createdAt})
    </foreach>
  </insert>

  <select id="findById" parameterType="int" resultMap="PeopleResultMap">
    select id, nick, created_at from people WHERE id = #{value}
  </select>

  <select id="find2ById" parameterType="int" resultType="map">
    select id, nick, created_at from people WHERE id = #{value}
  </select>

  <update id="update" parameterType="People">
    update people
    set nick = #{nick}
    where id = #{id}
  </update>

  <select id="dynamicFindExample" parameterType="People" resultMap="PeopleResultMap">
    select id, nick, created_at from people
    WHERE
    <if test="nick != null">
      nick = #{nick}
    </if>
    <if test="id != null">
      AND id = #{id}
    </if>
  </select>
</mapper>